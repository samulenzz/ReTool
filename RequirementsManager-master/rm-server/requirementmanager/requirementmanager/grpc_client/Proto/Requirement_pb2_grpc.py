# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
import requirementmanager.grpc_client.Proto.Requirement_pb2 as Requirement__pb2


class RequirementStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Itemized = channel.unary_unary(
        '/Requirement/Itemized',
        request_serializer=Requirement__pb2.ReSplitValue.SerializeToString,
        response_deserializer=Requirement__pb2.ReSplitValue.FromString,
        )
    self.Relate_Re_Sugg = channel.unary_unary(
        '/Requirement/Relate_Re_Sugg',
        request_serializer=Requirement__pb2.ReValue.SerializeToString,
        response_deserializer=Requirement__pb2.ReValue.FromString,
        )
    self.GetChSyn = channel.unary_unary(
        '/Requirement/GetChSyn',
        request_serializer=Requirement__pb2.synValue.SerializeToString,
        response_deserializer=Requirement__pb2.synValue.FromString,
        )
    self.structurization = channel.unary_unary(
        '/Requirement/structurization',
        request_serializer=Requirement__pb2.Value.SerializeToString,
        response_deserializer=Requirement__pb2.Value.FromString,
        )
    self.conflictdetect = channel.unary_unary(
        '/Requirement/conflictdetect',
        request_serializer=Requirement__pb2.Value.SerializeToString,
        response_deserializer=Requirement__pb2.Value.FromString,
        )
    self.relationship = channel.unary_unary(
        '/Requirement/relationship',
        request_serializer=Requirement__pb2.Value.SerializeToString,
        response_deserializer=Requirement__pb2.Value.FromString,
        )
    self.similarity = channel.unary_unary(
        '/Requirement/similarity',
        request_serializer=Requirement__pb2.Value.SerializeToString,
        response_deserializer=Requirement__pb2.Value.FromString,
        )


class RequirementServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Itemized(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Relate_Re_Sugg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetChSyn(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def structurization(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def conflictdetect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def relationship(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def similarity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RequirementServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Itemized': grpc.unary_unary_rpc_method_handler(
          servicer.Itemized,
          request_deserializer=Requirement__pb2.ReSplitValue.FromString,
          response_serializer=Requirement__pb2.ReSplitValue.SerializeToString,
      ),
      'Relate_Re_Sugg': grpc.unary_unary_rpc_method_handler(
          servicer.Relate_Re_Sugg,
          request_deserializer=Requirement__pb2.ReValue.FromString,
          response_serializer=Requirement__pb2.ReValue.SerializeToString,
      ),
      'GetChSyn': grpc.unary_unary_rpc_method_handler(
          servicer.GetChSyn,
          request_deserializer=Requirement__pb2.synValue.FromString,
          response_serializer=Requirement__pb2.synValue.SerializeToString,
      ),
      'structurization': grpc.unary_unary_rpc_method_handler(
          servicer.structurization,
          request_deserializer=Requirement__pb2.Value.FromString,
          response_serializer=Requirement__pb2.Value.SerializeToString,
      ),
      'conflictdetect': grpc.unary_unary_rpc_method_handler(
          servicer.conflictdetect,
          request_deserializer=Requirement__pb2.Value.FromString,
          response_serializer=Requirement__pb2.Value.SerializeToString,
      ),
      'relationship': grpc.unary_unary_rpc_method_handler(
          servicer.relationship,
          request_deserializer=Requirement__pb2.Value.FromString,
          response_serializer=Requirement__pb2.Value.SerializeToString,
      ),
      'similarity': grpc.unary_unary_rpc_method_handler(
          servicer.similarity,
          request_deserializer=Requirement__pb2.Value.FromString,
          response_serializer=Requirement__pb2.Value.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Requirement', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
